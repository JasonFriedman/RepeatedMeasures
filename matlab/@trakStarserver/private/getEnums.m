% GETENUMS Get the enums for the trakStar
%
% This is part of the file generated using the 'mfilename' option with loadlibrary
function enuminfo = getEnums

enuminfo.BOARD_TYPES=struct('ATC3DG_MEDSAFE',0,'PCIBIRD_STD1',1,'PCIBIRD_STD2',2,'PCIBIRD_8mm1',3,'PCIBIRD_8mm2',4,'PCIBIRD_2mm1',5,'PCIBIRD_2mm2',6,'PCIBIRD_FLAT',7,'PCIBIRD_FLAT_MICRO1',8,'PCIBIRD_FLAT_MICRO2',9,'PCIBIRD_DSP4',10,'PCIBIRD_UNKNOWN',11,'ATC3DG_BB',12);
enuminfo.DATA_FORMAT_TYPE=struct('NO_FORMAT_SELECTED',0,'SHORT_POSITION',1,'SHORT_ANGLES',2,'SHORT_MATRIX',3,'SHORT_QUATERNIONS',4,'SHORT_POSITION_ANGLES',5,'SHORT_POSITION_MATRIX',6,'SHORT_POSITION_QUATERNION',7,'DOUBLE_POSITION',8,'DOUBLE_ANGLES',9,'DOUBLE_MATRIX',10,'DOUBLE_QUATERNIONS',11,'DOUBLE_POSITION_ANGLES',12,'DOUBLE_POSITION_MATRIX',13,'DOUBLE_POSITION_QUATERNION',14,'DOUBLE_POSITION_TIME_STAMP',15,'DOUBLE_ANGLES_TIME_STAMP',16,'DOUBLE_MATRIX_TIME_STAMP',17,'DOUBLE_QUATERNIONS_TIME_STAMP',18,'DOUBLE_POSITION_ANGLES_TIME_STAMP',19,'DOUBLE_POSITION_MATRIX_TIME_STAMP',20,'DOUBLE_POSITION_QUATERNION_TIME_STAMP',21,'DOUBLE_POSITION_TIME_Q',22,'DOUBLE_ANGLES_TIME_Q',23,'DOUBLE_MATRIX_TIME_Q',24,'DOUBLE_QUATERNIONS_TIME_Q',25,'DOUBLE_POSITION_ANGLES_TIME_Q',26,'DOUBLE_POSITION_MATRIX_TIME_Q',27,'DOUBLE_POSITION_QUATERNION_TIME_Q',28,'SHORT_ALL',29,'DOUBLE_ALL',30,'DOUBLE_ALL_TIME_STAMP',31,'DOUBLE_ALL_TIME_STAMP_Q',32,'DOUBLE_ALL_TIME_STAMP_Q_RAW',33,'DOUBLE_POSITION_ANGLES_TIME_Q_BUTTON',34,'DOUBLE_POSITION_MATRIX_TIME_Q_BUTTON',35,'DOUBLE_POSITION_QUATERNION_TIME_Q_BUTTON',36,'DOUBLE_POSITION_ANGLES_MATRIX_QUATERNION_TIME_Q_BUTTON',37,'MAXIMUM_FORMAT_CODE',38);
enuminfo.FILTER_OPTION=struct('NO_FILTER',0,'DEFAULT_FLOCK_FILTER',1);
enuminfo.DEVICE_TYPES=struct('STANDARD_SENSOR',0,'TYPE_800_SENSOR',1,'STANDARD_TRANSMITTER',2,'MINIBIRD_TRANSMITTER',3,'SMALL_TRANSMITTER',4,'TYPE_500_SENSOR',5,'TYPE_180_SENSOR',6,'TYPE_130_SENSOR',7,'TYPE_TEM_SENSOR',8,'UNKNOWN_SENSOR',9,'UNKNOWN_TRANSMITTER',10,'TYPE_800_BB_SENSOR',11,'TYPE_800_BB_STD_TRANSMITTER',12,'TYPE_800_BB_SMALL_TRANSMITTER',13,'TYPE_090_BB_SENSOR',14);
enuminfo.TRANSMITTER_PARAMETER_TYPE=struct('SERIAL_NUMBER_TX',0,'REFERENCE_FRAME',1,'XYZ_REFERENCE_FRAME',2,'VITAL_PRODUCT_DATA_TX',3,'MODEL_STRING_TX',4,'PART_NUMBER_TX',5,'END_OF_TX_LIST',6);
enuminfo.HEMISPHERE_TYPE=struct('FRONT',0,'BACK',1,'TOP',2,'BOTTOM',3,'LEFT',4,'RIGHT',5);
enuminfo.BOARD_PARAMETER_TYPE=struct('SERIAL_NUMBER_PCB',0,'BOARD_SOFTWARE_REVISIONS',1,'POST_ERROR_PCB',2,'DIAGNOSTIC_TEST_PCB',3,'VITAL_PRODUCT_DATA_PCB',4,'MODEL_STRING_PCB',5,'PART_NUMBER_PCB',6,'END_OF_PCB_LIST_BRD',7);
enuminfo.AGC_MODE_TYPE=struct('TRANSMITTER_AND_SENSOR_AGC',0,'SENSOR_AGC_ONLY',1);
enuminfo.SYSTEM_PARAMETER_TYPE=struct('SELECT_TRANSMITTER',0,'POWER_LINE_FREQUENCY',1,'AGC_MODE',2,'MEASUREMENT_RATE',3,'MAXIMUM_RANGE',4,'METRIC',5,'VITAL_PRODUCT_DATA',6,'POST_ERROR',7,'DIAGNOSTIC_TEST',8,'REPORT_RATE',9,'COMMUNICATIONS_MEDIA',10,'LOGGING',11,'RESET',12,'AUTOCONFIG',13,'END_OF_LIST',14);
enuminfo.MESSAGE_TYPE=struct('SIMPLE_MESSAGE',0,'VERBOSE_MESSAGE',1);
enuminfo.COMMUNICATIONS_MEDIA_TYPE=struct('USB',0,'RS232',1,'TCPIP',2);
enuminfo.SENSOR_PARAMETER_TYPE=struct('DATA_FORMAT',0,'ANGLE_ALIGN',1,'HEMISPHERE',2,'FILTER_AC_WIDE_NOTCH',3,'FILTER_AC_NARROW_NOTCH',4,'FILTER_DC_ADAPTIVE',5,'FILTER_ALPHA_PARAMETERS',6,'FILTER_LARGE_CHANGE',7,'QUALITY',8,'SERIAL_NUMBER_RX',9,'SENSOR_OFFSET',10,'VITAL_PRODUCT_DATA_RX',11,'VITAL_PRODUCT_DATA_PREAMP',12,'MODEL_STRING_RX',13,'PART_NUMBER_RX',14,'MODEL_STRING_PREAMP',15,'PART_NUMBER_PREAMP',16,'END_OF_RX_LIST',17);
enuminfo.BIRD_ERROR_CODES=struct('BIRD_ERROR_SUCCESS',0,'BIRD_ERROR_PCB_HARDWARE_FAILURE',1,'BIRD_ERROR_TRANSMITTER_EEPROM_FAILURE',2,'BIRD_ERROR_SENSOR_SATURATION_START',3,'BIRD_ERROR_ATTACHED_DEVICE_FAILURE',4,'BIRD_ERROR_CONFIGURATION_DATA_FAILURE',5,'BIRD_ERROR_ILLEGAL_COMMAND_PARAMETER',6,'BIRD_ERROR_PARAMETER_OUT_OF_RANGE',7,'BIRD_ERROR_NO_RESPONSE',8,'BIRD_ERROR_COMMAND_TIME_OUT',9,'BIRD_ERROR_INCORRECT_PARAMETER_SIZE',10,'BIRD_ERROR_INVALID_VENDOR_ID',11,'BIRD_ERROR_OPENING_DRIVER',12,'BIRD_ERROR_INCORRECT_DRIVER_VERSION',13,'BIRD_ERROR_NO_DEVICES_FOUND',14,'BIRD_ERROR_ACCESSING_PCI_CONFIG',15,'BIRD_ERROR_INVALID_DEVICE_ID',16,'BIRD_ERROR_FAILED_LOCKING_DEVICE',17,'BIRD_ERROR_BOARD_MISSING_ITEMS',18,'BIRD_ERROR_NOTHING_ATTACHED',19,'BIRD_ERROR_SYSTEM_PROBLEM',20,'BIRD_ERROR_INVALID_SERIAL_NUMBER',21,'BIRD_ERROR_DUPLICATE_SERIAL_NUMBER',22,'BIRD_ERROR_FORMAT_NOT_SELECTED',23,'BIRD_ERROR_COMMAND_NOT_IMPLEMENTED',24,'BIRD_ERROR_INCORRECT_BOARD_DEFAULT',25,'BIRD_ERROR_INCORRECT_RESPONSE',26,'BIRD_ERROR_NO_TRANSMITTER_RUNNING',27,'BIRD_ERROR_INCORRECT_RECORD_SIZE',28,'BIRD_ERROR_TRANSMITTER_OVERCURRENT',29,'BIRD_ERROR_TRANSMITTER_OPEN_CIRCUIT',30,'BIRD_ERROR_SENSOR_EEPROM_FAILURE',31,'BIRD_ERROR_SENSOR_DISCONNECTED',32,'BIRD_ERROR_SENSOR_REATTACHED',33,'BIRD_ERROR_NEW_SENSOR_ATTACHED',34,'BIRD_ERROR_UNDOCUMENTED',35,'BIRD_ERROR_TRANSMITTER_REATTACHED',36,'BIRD_ERROR_WATCHDOG',37,'BIRD_ERROR_CPU_TIMEOUT_START',38,'BIRD_ERROR_PCB_RAM_FAILURE',39,'BIRD_ERROR_INTERFACE',40,'BIRD_ERROR_PCB_EPROM_FAILURE',41,'BIRD_ERROR_SYSTEM_STACK_OVERFLOW',42,'BIRD_ERROR_QUEUE_OVERRUN',43,'BIRD_ERROR_PCB_EEPROM_FAILURE',44,'BIRD_ERROR_SENSOR_SATURATION_END',45,'BIRD_ERROR_NEW_TRANSMITTER_ATTACHED',46,'BIRD_ERROR_SYSTEM_UNINITIALIZED',47,'BIRD_ERROR_12V_SUPPLY_FAILURE',48,'BIRD_ERROR_CPU_TIMEOUT_END',49,'BIRD_ERROR_INCORRECT_PLD',50,'BIRD_ERROR_NO_TRANSMITTER_ATTACHED',51,'BIRD_ERROR_NO_SENSOR_ATTACHED',52,'BIRD_ERROR_SENSOR_BAD',53,'BIRD_ERROR_SENSOR_SATURATED',54,'BIRD_ERROR_CPU_TIMEOUT',55,'BIRD_ERROR_UNABLE_TO_CREATE_FILE',56,'BIRD_ERROR_UNABLE_TO_OPEN_FILE',57,'BIRD_ERROR_MISSING_CONFIGURATION_ITEM',58,'BIRD_ERROR_MISMATCHED_DATA',59,'BIRD_ERROR_CONFIG_INTERNAL',60,'BIRD_ERROR_UNRECOGNIZED_MODEL_STRING',61,'BIRD_ERROR_INCORRECT_SENSOR',62,'BIRD_ERROR_INCORRECT_TRANSMITTER',63,'BIRD_ERROR_ALGORITHM_INITIALIZATION',64,'BIRD_ERROR_LOST_CONNECTION',65,'BIRD_ERROR_INVALID_CONFIGURATION',66,'BIRD_ERROR_TRANSMITTER_RUNNING',67,'BIRD_ERROR_MAXIMUM_VALUE',127);
